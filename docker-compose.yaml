version: '3.8'

services:

  application:
    container_name: hackaton-api
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT=1
        - progress=plain
    networks:
      - stack-network
    ports:
      - "8000:8000"
    env_file:
      - .env.dev
    depends_on:
      - database
      - migrations
      - localstack
    healthcheck:
      test: curl -X GET http://localhost:8000/healthcheck || exit 1
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 5s

  database:
    container_name: database-postgresql
    image: postgres:16.3-alpine3.20
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - stack-network
    ports:
      - "5432:5432"
    volumes:
      - ./.targets/database:/var/lib/postgresql/data/
      - ./seeds/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 5s  
  
  migrations:
    container_name: database-migrations-alembic
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT=1
        - progress=plain
    networks:
      - stack-network
    env_file:
      - .env.dev
    depends_on:
      - database
    entrypoint: python3 ./migrations.py

  localstack:
    container_name: cloud-services
    image: localstack/localstack
    networks:
      - stack-network
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - DEBUG=0
      - SERVICES=s3
    env_file:
      - .env.dev
    # volumes:
    #   - "./localstack_data:/var/lib/localstack"
    #   - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: curl -X GET http://127.0.0.1:4566/_localstack/health || exit 1
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 5s  
  
networks:
  stack-network:
    driver: bridge
